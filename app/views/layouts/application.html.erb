<!DOCTYPE html>
<html>
<head>
  <title>Webvideo</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <link href='//fonts.googleapis.com/css?family=Concert+One' rel='stylesheet' type='text/css'>
  <link href='//fonts.googleapis.com/css?family=Francois+One' rel='stylesheet' type='text/css'>
  <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/jgdleghpbefeehaifmlahemhjbepfnoj">
  <%= csrf_meta_tags %>
  <script src="//static.opentok.com/webrtc/v2.2/js/opentok.min.js" ></script>
  <script src='//static.opentok.com/v2/js/opentok.min.js'></script>
  <script src="https://cdn.firebase.com/js/client/2.1.2/firebase.js"></script>
  <script src='https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js'></script>
  <script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
  <meta name="google-site-verification" content="ss4moOH1DjA2p6BcKwgEsf0nQuTZj_8qFuXNPvA-SNA" />
  <meta name="google-site-verification" content="G6UKg1HG6M0JqIk3N_R8P21wQHxRUV7lUJUbczN8p2M" />
  <meta name="google-site-verification" content="G6UKg1HG6M0JqIk3N_R8P21wQHxRUV7lUJUbczN8p2M" />
  <meta name="google-site-verification" content="G6UKg1HG6M0JqIk3N_R8P21wQHxRUV7lUJUbczN8p2M" />
  <meta name="google-site-verification" content="G6UKg1HG6M0JqIk3N_R8P21wQHxRUV7lUJUbczN8p2M" />
  <meta name="google-site-verification" content="a1feCVD2cgME3ZJjNhB0yqCdy_uTumunmgyfY62_Lbw" />

</head>
<body>
 
<header>
  <h1> Widny-Chat </h1>
</header>
 
  
<div id="error" style="display:none">
    Sorry, your browser does not support webrtc. Please try Firefox or Google Chrome.
</div>
  
 
<div id ="video-container">
 
  <div id="others">
    <h4>Subscriber Stream:</h4>
    <!-- <button id="listen">Turn On</button> -->
  </div>
 
  <div id="yours">
    <h4>Publisher Stream:</h4>
      <div id="publisher">
        <!-- <a href="javascript:resizePublisher()">resize</a>  -->
      </div>
    <button id="audio-off">Mute</button>
  </div>
  <button onclick="chrome.webstore.install()" id="install-button">Add to chrome</button>
  <div id="screen-preview">
  </div>
  <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/jgdleghpbefeehaifmlahemhjbepfnoj">
  <div id="people"></div>
  <div id="screens"></div>
  <!-- <div id="sub-screen-sharing-container"></div> -->
  <!-- <div id="screens"></div> -->
  <!-- <div id="sub-camera-container"></div> -->
  <!-- <div id="screen-share"></div> -->
  <!-- <div id="screen-preview"></div> -->

 
</div>


  <%= yield %>
 
  <script type="text/javascript">
  
  
  var apiKey    = "45131832";
  var sessionId = "1_MX40NTEzMTgzMn5-MTQyNDk3ODE3MTk5OH5NaEYwK2RKVy9mZXQ5VUpzMjg0d2pZb2Z-fg";
  var token     = "T1==cGFydG5lcl9pZD00NTEzMTgzMiZzaWc9YTViMDI4OTQ3YThhZGI0MGQ1MTA1YzQ3ZjFhMmVkMTI4OWJlYTMxZDpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTFfTVg0ME5URXpNVGd6TW41LU1UUXlORGszT0RFM01UazVPSDVOYUVZd0syUktWeTltWlhRNVZVcHpNamcwZDJwWmIyWi1mZyZjcmVhdGVfdGltZT0xNDI0OTc4MTg0Jm5vbmNlPTAuNTg0MDgwODM1MjEyOTg1NCZleHBpcmVfdGltZT0xNDI3NTcwMTUw";
  var replacementElementId = "publisher";
  var others = document.getElementById('others');


 
 
  function setupChat() {
    // See http://www.tokbox.com/blog/getting-started-with-opentok-from-0-to-simple-group-video-chat/
    var sizeOpts = {width: 944, height: 531};
 
    var publisher = OT.initPublisher(replacementElementId, sizeOpts);
    var session = OT.initSession(apiKey, sessionId); 
    window.session = session
 
    // Publisher initiates and connects to session and subscribe to session's stream 
    session.addEventListener('sessionConnected', function(e){
      console.log("session connected");
      session.publish(publisher);
      subscribeToStreams(e.streams);
    });
 
    // Other paticipicants can subscribe to session's stream
    session.addEventListener("streamCreated", function(event) {
      console.log("stream created");
      subscribeToStreams(event.streams);
    });
 
    // Other paricipicants can subscribe to the session's audio
    var audio = document.getElementById("listen");
      session.addEventListener("audioEstablished", function(a) {
      console.log("audio established");
      session.subscribetoAudio(true);
    });
 
    session.connect(token);
 
    // Send signal to all subscribers connected to the same sesiion with 
    // data strings that sends a message or else signal error.
    // session.signal({
    //   data:"hello",
    //   type:"textMessage"
    //   },
    //   function(error) {
    //     if (error) {
    //       console.log("signal error ("
    //                    + error.code
    //                    + "): " + error.message);
    //     } else {
    //       console.log("signal sent.");
    //     }
    //   }
    // );
 
    // session.on("signal:textMessage", function(event) {
    //  console.log("Signal sent from connection " + event.from.id);
    //  // Process the event.data property, if there is any data.
    // })
 
    function subscribeToStreams(streams) {
      console.log('subscribe to streams');
      console.log(streams);
      for (var i = 0; i < streams.length; i++) {
        // Make sure we don't subscribe to ourself
        if (streams[i].connection.connectionId == session.connection.connectionId) {
          return;
        }
        // Create the div to put the subscriber element in to
        var div = document.createElement('div');
        div.setAttribute('id', 'stream' + streams[i].streamId);
        div.setAttribute('class', 'video-stream');
        others.appendChild(div);
        console.log("subscribing to stream");
        session.subscribe(streams[i], div.id, sizeOpts);
        
      }
    }
      
    // Mute button
    var muteButton = document.getElementById("audio-off");
    muteButton.onclick = function() {
      publisher.publishAudio(false); 
    };
 
  }
 
// if all the requirements are met and browser supports WebRTC, then do the setupChat. 
// Provides error messgage if WebRTC is not supported. 
if (OT.checkSystemRequirements() == 1) {
  setupChat();
} else {
  console.log("The client does not support WebRTC.");
  document.getElementById("error").style.display = 'block';
}

OT.registerScreenSharingExtension("chrome", "jgdleghpbefeehaifmlahemhjbepfnoj");

OT.checkScreenSharingCapability(function(response) {
  response.extensionRequired = "chrome";
  response.extensionRegistered = true ;
  response.extensionInstalled = true;
  if (!response.supported || response.extensionRegistered === false) {
    //This browser does not support screen sharing
    console.log("This browser does not support screen sharing");
  } else if(chrome.app.isInstalled === false) {
    // console.log("Prompt to install screen share extension"),     
    document.getElementById('install-button').onclick = function() {
     chrome.webstore.install('https://chrome.google.com/webstore/detail/jgdleghpbefeehaifmlahemhjbepfnoj',
     successCallback,
     failureCallback
     );
   };
    
   function successCallback() {
     location.reload();
   }

   function failureCallback(error) {
     alert(error);
   }

  } else {
    console.log("Screen share is available");
    var publishOptions = {};
    publishOptions.mirror = false;
    publishOptions.maxResolution = { width: 1920, height: 1080 };
    publishOptions.videoSource = 'screen';

    var screen_publisher = OT.initPublisher('screens',
      publishOptions,
      function(error) {
        if (error) {
          console.log('error initializing screen publisher');
          // look at error.message to see what went wrong 
          console.log(error);
        }
    });

    session.publish(screen_publisher, function(error) {
      if (error) {
       //Look  error.message to see what went wrong. 
       console.log('error publishing screen');
       console.log(error);
      }
    });
  }
});


 </script>
 
</body>
</html>
 

