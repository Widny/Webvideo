<!DOCTYPE html>
<html>
<head>
  <title>Webvideo</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <script src="//static.opentok.com/webrtc/v2.2/js/opentok.min.js" ></script>
</head>
<body>

  <div id="container">
    <div id="other"></div>
    <div id="publisher"></div>
    <button id="audio-off">Mute</button>
  </div>

  <%= yield %>

  <script type="text/javascript">
  var apiKey    = "45131832";
  var sessionId = "2_MX40NTEzMTgzMn5-MTQyMzE4OTY5OTY4NX5HT2h5b3QzbFhEV1R5WFZhdm1CeVVLUDh-fg";
  var token     = "T1==cGFydG5lcl9pZD00NTEzMTgzMiZzaWc9MTI5YWFiNjFkN2M0YWU2YmYzODYxMWRiZWJmZTg3YmI1ODYwNTk5Zjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTJfTVg0ME5URXpNVGd6TW41LU1UUXlNekU0T1RZNU9UWTROWDVIVDJoNWIzUXpiRmhFVjFSNVdGWmhkbTFDZVZWTFVEaC1mZyZjcmVhdGVfdGltZT0xNDIzMTg5NzgzJm5vbmNlPTAuMDE1NTk0ODQxNDI1NzUwOTYmZXhwaXJlX3RpbWU9MTQyMzc5NDM3MA==";


var session;
var publisher;

var replacementElementId = "publisher";
 
if (OT.checkSystemRequirements() == 1) {
    // Replace with the replacement element ID:
    publisher = OT.initPublisher(replacementElementId, {width: 600, height: 400});
    publisher.on({
        streamCreated: function (event) {
            console.log("Publisher started streaming.");
        },
        streamDestroyed: function (event) {
            console.log("Publisher stopped streaming. Reason: "
               + event.reason);
        }
    });

    var button = document.getElementById("audio-off");
    button.onclick = function() {
      publisher.publishAudio(false);
    };
 
    // Replace apiKey and sessionID with your own values:
    session = OT.initSession(apiKey, sessionId);
    // Replace token with your own value:
    session.connect(token, function (error) {
        if (session.capabilities.publish == 1) {
            session.publish(publisher);
        } else {
            console.log("You cannot publish an audio-video stream.");
        }
    });
    function sessionConnectedHandler(event) {
      subscribeToStreams(event.streams);
      session.publish();
    }
    function subscribeToStreams(streams) {
      for (var i = 0; i < streams.length; i++) {
        var stream = streams[i];
        if (stream.connection.connectionId != session.connection.connectionId) {
          session.subscribe(stream);
        }
      }
    }
    session.addEventListener("sessionConnected", sessionConnectedHandler);
    session.addEventListener("streamCreated", function(event) {
      subscribeToStreams(event.streams);
    });
} else {
    console.log("The client does not support WebRTC.");
}

// <div id="screen_preview"></div>
 
// OT.checkScreenSharingCapability(function(response) {
//   if(!response.supported || response.extensionRegistered === false) {
//     // This browser does not support screen sharing.
//   } else if(response.extensionInstalled === false) {
//     // Prompt to install the response.extensionRequired extension.
//   } else {
//     // Screen sharing is available. Publish the screen.
//     OT.initPublisher('screen-preview',
//       {videoSource: 'screen'},
//       function(error) {
//         if (error) {
//           // Look at error.message to see what went wrong.
//         } else {
//           session.publish(publisher, function(error) {
//             if (error) {
//              // Look error.message to see what went wrong.
//             }
//           });
//         }
//       }
//     );
//   }
// });
// </script>

</body>
</html>
